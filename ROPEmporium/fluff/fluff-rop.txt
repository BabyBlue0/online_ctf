0x400806: ret
0x400811: retf
0x40071a: repz ret
0x400805: leave; ret
0x4006b0: pop rbp; ret
0x4008c3: pop rdi; ret
0x4008c2: pop r15; ret
0x4008cf: add bl,dh; ret
0x400804: nop; leave; ret
0x40080f: add al,ch; retf
0x4005b6: add esp,0x8; ret
0x4005b5: add rsp,0x8; ret
0x400719: add ebx,esi; ret
0x40080e: add al,bpl; retf
0x400815: nop; pop rbp; ret
0x400856: xor [rdx],ah; ret
0x400855: xor [r10],r12b; ret
0x4008ac: fmul [rax-0x7d]; ret
0x400829: adc [rax+0x0],ah; ret
0x400827: mov edi,0x601050; ret
0x400835: mov ebp,0x604060; ret
0x400848: and [rax+0x0],ah; ret
0x400846: mov ebx,0x602050; ret
0x4008c1: pop rsi; pop r15; ret
0x4008c0: pop r14; pop r15; ret
0x400718: add [rcx],al; repz ret
0x400834: mov r13d,0x604060; ret
0x400845: mov r11d,0x602050; ret
0x4008ce: add [rax],al; repz ret
0x4006f5: nop [rax]; pop rbp; ret
0x4007ae: mov eax,0x0; pop rbp; ret
0x4006ae: add [rax],al; pop rbp; ret
0x400854: pop rsp; xor [r10],r12b; ret
0x400853: pop r12; xor [r10],r12b; ret
0x4008cd: add [rax],al; add bl,dh; ret
0x4008c8: nop [rax+rax*1+0x0]; repz ret
0x4008d5: sub esp,0x8; add rsp,0x8; ret
0x4008d4: sub rsp,0x8; add rsp,0x8; ret
0x4005b3: add [rax],al; add rsp,0x8; ret
0x400717: and [rax],al; add ebx,esi; ret
0x400826: pop rsi; mov edi,0x601050; ret
0x400825: pop r14; mov edi,0x601050; ret
0x4008bf: pop rbp; pop r14; pop r15; ret
0x4008be: pop r13; pop r14; pop r15; ret
0x400828: push rax; adc [rax+0x0],ah; ret
0x400833: pop rsp; mov r13d,0x604060; ret
0x400832: pop r12; mov r13d,0x604060; ret
0x400847: push rax; and [rax+0x0],ah; ret
0x400844: pop rdi; mov r11d,0x602050; ret
0x400843: pop r15; mov r11d,0x602050; ret
0x4006f3: jmp rax; nop [rax]; pop rbp; ret
0x4008c7: nop cs:[rax+rax*1+0x0]; repz ret
0x4006a8: nop [rax+rax*1+0x0]; pop rbp; ret
0x400714: add eax,0x20096e; add ebx,esi; ret
0x400716: or [rax],esp; add [rcx],al; repz ret
0x4008cc: add [rax],al; add [rax],al; repz ret
0x400852: pop rbp; pop r12; xor [r10],r12b; ret
0x400851: pop r13; pop r12; xor [r10],r12b; ret
0x4008c5: nop; nop cs:[rax+rax*1+0x0]; repz ret
0x400824: fild [rcx+0x5e]; mov edi,0x601050; ret
0x4008bd: pop rsp; pop r13; pop r14; pop r15; ret
0x4008bc: pop r12; pop r13; pop r14; pop r15; ret
0x4006ac: add [rax],al; add [rax],al; pop rbp; ret
0x400842: rol [rcx+0x5f],cl; mov r11d,0x602050; ret
0x4006a5: jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4007ff: call 0x400620 <fgets@plt>; nop; leave; ret
0x4008cb: add [rax],al; add [rax],al; add bl,dh; ret
0x400823: xor ebx,ebx; pop r14; mov edi,0x601050; ret
0x400822: xor r11,r11; pop r14; mov edi,0x601050; ret
0x4008d2: add [rax],al; sub rsp,0x8; add rsp,0x8; ret
0x400830: xor ebx,esp; pop r12; mov r13d,0x604060; ret
0x40082f: xor r11,r12; pop r12; mov r13d,0x604060; ret
0x4005b1: mov eax,[rax]; add [rax],al; add rsp,0x8; ret
0x400810: call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x400841: xchg ebx,edx; pop r15; mov r11d,0x602050; ret
0x400840: xchg r11,r10; pop r15; mov r11d,0x602050; ret
0x400850: sbb al,[rcx+0x5d]; pop r12; xor [r10],r12b; ret
0x4008bb: pop rbp; pop r12; pop r13; pop r14; pop r15; ret
0x4006f0: adc [rax+0x0],ah; jmp rax; nop [rax]; pop rbp; ret
0x4006ee: mov edi,0x601060; jmp rax; nop [rax]; pop rbp; ret
0x400711: call [rbp-0x3a]; add eax,0x20096e; add ebx,esi; ret
0x4007a9: call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4008ca: test [rax],al; add [rax],al; add [rax],al; repz ret
0x4005b0: call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x400821: pop rdi; xor r11,r11; pop r14; mov edi,0x601050; ret
0x400820: pop r15; xor r11,r11; pop r14; mov edi,0x601050; ret
0x40084f: mov [rdx],ebx; pop r13; pop r12; xor [r10],r12b; ret
0x40084e: mov [r10],r11; pop r13; pop r12; xor [r10],r12b; ret
0x40082e: pop rsi; xor r11,r12; pop r12; mov r13d,0x604060; ret
0x40082d: pop r14; xor r11,r12; pop r12; mov r13d,0x604060; ret
0x400715: outs dx,ds:[rsi]; or [rax],esp; add [rcx],al; repz ret
0x4006aa: test [rax],al; add [rax],al; add [rax],al; pop rbp; ret
0x4007fd: mov edi,eax; call 0x400620 <fgets@plt>; nop; leave; ret
0x4007fc: mov rdi,rax; call 0x400620 <fgets@plt>; nop; leave; ret
0x4008b9: or [rbx+0x5d],bl; pop r12; pop r13; pop r14; pop r15; ret
0x4006ed: pop rbp; mov edi,0x601060; jmp rax; nop [rax]; pop rbp; ret
0x4006a2: adc [rax+0x0],ah; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4006a0: mov edi,0x601060; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x400713: mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
0x40083f: add [rbp-0x79],cl; rol [rcx+0x5f],cl; mov r11d,0x602050; ret
0x40084d: pop rdi; mov [r10],r11; pop r13; pop r12; xor [r10],r12b; ret
0x40084c: pop r15; mov [r10],r11; pop r13; pop r12; xor [r10],r12b; ret
0x40081f: add [rcx+0x5f],al; xor r11,r11; pop r14; mov edi,0x601050; ret
0x40080d: or [rax+0x0],eax; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x40080b: mov edi,0x40095b; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x40083d: adc [rax+0x0],ah; xchg r11,r10; pop r15; mov r11d,0x602050; ret
0x40083b: mov edi,0x601050; xchg r11,r10; pop r15; mov r11d,0x602050; ret
0x40082b: add bl,al; pop r14; xor r11,r12; pop r12; mov r13d,0x604060; ret
0x40081e: add [rax],al; pop r15; xor r11,r11; pop r14; mov edi,0x601050; ret
0x400831: jrcxz 0x400874 <__libc_csu_init+20>; pop rsp; mov r13d,0x604060; ret
0x40069f: pop rbp; mov edi,0x601060; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x400712: pop rbp; mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
0x4007a6: or [rax+0x0],eax; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4007a4: mov edi,0x400906; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4007fa: add [rax],al; mov rdi,rax; call 0x400620 <fgets@plt>; nop; leave; ret
0x4007f7: mov esi,0x200; mov rdi,rax; call 0x400620 <fgets@plt>; nop; leave; ret
0x40080c: pop rbx; or [rax+0x0],eax; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x400818: nop [rax+rax*1+0x0]; pop r15; xor r11,r11; pop r14; mov edi,0x601050; ret
0x40083c: push rax; adc [rax+0x0],ah; xchg r11,r10; pop r15; mov r11d,0x602050; ret
0x4007a3: add [rdi+0x400906],bh; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x400839: add bl,al; mov edi,0x601050; xchg r11,r10; pop r15; mov r11d,0x602050; ret
0x4005ae: je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x400809: mov ebp,esp; mov edi,0x40095b; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x400808: mov rbp,rsp; mov edi,0x40095b; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x40081d: add [rax],al; add [rcx+0x5f],al; xor r11,r11; pop r14; mov edi,0x601050; ret
0x4006a6: loopne 0x40070e <__do_global_dtors_aux+14>; nop [rax+rax*1+0x0]; pop rbp; ret
0x4007a2: add [rax],al; mov edi,0x400906; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4006a4: add bh,bh; loopne 0x40070e <__do_global_dtors_aux+14>; nop [rax+rax*1+0x0]; pop rbp; ret
0x4007a1: add [rax],al; add [rdi+0x400906],bh; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4005ac: test eax,eax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x4005ab: test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x40079f: call 0x4007b5 <pwnme>; mov edi,0x400906; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4005a9: and [rax],al; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x40070d: call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
0x4005a6: add eax,0x200a4d; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x40070b: mov ebp,esp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
0x40070a: mov rbp,rsp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
0x4005a5: mov eax,[rip+0x200a4d] # 0x600ff8; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x4005a4: mov rax,[rip+0x200a4d] # 0x600ff8; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x400709: push rbp; mov rbp,rsp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
0x400708: adc [rbp+0x48],edx; mov ebp,esp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20096e],0x1 # 0x601088 <completed.7585>; repz ret
