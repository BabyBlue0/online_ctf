from z3 import *

v = [ Int("v[%d]"%i) for i in range( 16 ) ]

#ソルバーの生成
s = Solver()

#成約を追加
for i in range( len(v) ):
  s.add( 0 <= v[i], v[i] < 36 )
s.add( (v[0]+v[1])%0x24 == 0x0e )
s.add( (v[2]+v[3])%0x24 == 0x18 )
s.add( (v[2]-v[0])%0x24 == 0x06 )
s.add( (v[1]+v[3]+v[5])%0x24 == 0x04 )
s.add( (v[2]+v[4]+v[6])%0x24 == 0x0d )
s.add( (v[3]+v[4]+v[5])%0x24 == 0x16 )
s.add( (v[6]+v[8]+v[10])%0x24 == 0x1f )
s.add( (v[1]+v[4]+v[7])%0x24  == 0x07 )
s.add( (v[9]+v[12]+v[15])%0x24 == 0x14 )
s.add( (v[13]+v[14]+v[15])%0x24 == 0x0c )
s.add( (v[8]+v[9]+v[10])%0x24 == 0x1b )
s.add( (v[7]+v[12]+v[13])%0x24 == 0x17 )

r = s.check()
print( r )

def exCh( n ):
  if( 0 <= n and n <= 9 ):
    return str(n)
  else:
    return chr( n+0x37 )
m = s.model()
print(m )
print( "".join( [ exCh(m[v[i]].as_long()) for i in range(len( v )) ] ) )
