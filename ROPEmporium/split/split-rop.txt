0x400806: ret
0x400811: retf
0x40071a: repz ret
0x400805: leave; ret
0x4006b0: pop rbp; ret
0x400883: pop rdi; ret
0x400882: pop r15; ret
0x40088f: add bl,dh; ret
0x400804: nop; leave; ret
0x40080f: add al,ch; retf
0x4005b6: add esp,0x8; ret
0x4005b5: add rsp,0x8; ret
0x400719: add ebx,esi; ret
0x40080e: add al,bpl; retf
0x400815: nop; pop rbp; ret
0x40086c: fmul [rax-0x7d]; ret
0x400881: pop rsi; pop r15; ret
0x400880: pop r14; pop r15; ret
0x400718: add [rcx],al; repz ret
0x40088e: add [rax],al; repz ret
0x4006f5: nop [rax]; pop rbp; ret
0x4007ae: mov eax,0x0; pop rbp; ret
0x4006ae: add [rax],al; pop rbp; ret
0x40080c: dec [rax]; add al,bpl; retf
0x40088d: add [rax],al; add bl,dh; ret
0x400888: nop [rax+rax*1+0x0]; repz ret
0x400895: sub esp,0x8; add rsp,0x8; ret
0x400894: sub rsp,0x8; add rsp,0x8; ret
0x4005b3: add [rax],al; add rsp,0x8; ret
0x400717: and [rax],al; add ebx,esi; ret
0x40087f: pop rbp; pop r14; pop r15; ret
0x40087e: pop r13; pop r14; pop r15; ret
0x4006f3: jmp rax; nop [rax]; pop rbp; ret
0x400887: nop cs:[rax+rax*1+0x0]; repz ret
0x4006a8: nop [rax+rax*1+0x0]; pop rbp; ret
0x400714: add eax,0x20098e; add ebx,esi; ret
0x400716: or [rax],esp; add [rcx],al; repz ret
0x40088c: add [rax],al; add [rax],al; repz ret
0x400885: nop; nop cs:[rax+rax*1+0x0]; repz ret
0x40087d: pop rsp; pop r13; pop r14; pop r15; ret
0x40087c: pop r12; pop r13; pop r14; pop r15; ret
0x4006ac: add [rax],al; add [rax],al; pop rbp; ret
0x40080a: in eax,0xbf; dec [rax]; add al,bpl; retf
0x4006a5: jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4007ff: call 0x400620 <fgets@plt>; nop; leave; ret
0x40088b: add [rax],al; add [rax],al; add bl,dh; ret
0x400892: add [rax],al; sub rsp,0x8; add rsp,0x8; ret
0x4005b1: mov eax,[rax]; add [rax],al; add rsp,0x8; ret
0x400810: call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x40087b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret
0x400715: mov cs,WORD [rcx]; and [rax],al; add ebx,esi; ret
0x4006f0: adc [rax+0x0],ah; jmp rax; nop [rax]; pop rbp; ret
0x4006ee: mov edi,0x601080; jmp rax; nop [rax]; pop rbp; ret
0x400711: call [rbp-0x3a]; add eax,0x20098e; add ebx,esi; ret
0x4007a9: call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x40088a: test [rax],al; add [rax],al; add [rax],al; repz ret
0x4005b0: call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x4006aa: test [rax],al; add [rax],al; add [rax],al; pop rbp; ret
0x4007fd: mov edi,eax; call 0x400620 <fgets@plt>; nop; leave; ret
0x4007fc: mov rdi,rax; call 0x400620 <fgets@plt>; nop; leave; ret
0x400879: or [rbx+0x5d],bl; pop r12; pop r13; pop r14; pop r15; ret
0x4006ed: pop rbp; mov edi,0x601080; jmp rax; nop [rax]; pop rbp; ret
0x4006a2: adc [rax+0x0],ah; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x4006a0: mov edi,0x601080; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x400713: mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
0x40080d: or [rax+0x0],al; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x40080b: mov edi,0x4008ff; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x4007a6: or [rax+0x0],al; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x40069f: pop rbp; mov edi,0x601080; jmp rax; nop [rax+rax*1+0x0]; pop rbp; ret
0x400712: pop rbp; mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
0x4007a4: mov edi,0x4008c6; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4007fa: add [rax],al; mov rdi,rax; call 0x400620 <fgets@plt>; nop; leave; ret
0x4007f7: mov esi,0x60; mov rdi,rax; call 0x400620 <fgets@plt>; nop; leave; ret
0x4007a3: add [rdi+0x4008c6],bh; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4005ae: je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x400809: mov ebp,esp; mov edi,0x4008ff; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x400808: mov rbp,rsp; mov edi,0x4008ff; call 0x4005e0 <system@plt>; nop; pop rbp; ret
0x4006a6: loopne 0x40070e <__do_global_dtors_aux+14>; nop [rax+rax*1+0x0]; pop rbp; ret
0x4007a2: add [rax],al; mov edi,0x4008c6; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4006a4: add bh,bh; loopne 0x40070e <__do_global_dtors_aux+14>; nop [rax+rax*1+0x0]; pop rbp; ret
0x4007a1: add [rax],al; add [rdi+0x4008c6],bh; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4005ac: test eax,eax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x4005ab: test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x40079f: call 0x4007b5 <pwnme>; mov edi,0x4008c6; call 0x4005d0 <puts@plt>; mov eax,0x0; pop rbp; ret
0x4005a9: and [rax],al; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x4006a1: adc [rax],0x60; add bh,bh; loopne 0x40070e <__do_global_dtors_aux+14>; nop [rax+rax*1+0x0]; pop rbp; ret
0x40070d: call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
0x4005a6: add eax,0x200a4d; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x40070b: mov ebp,esp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
0x40070a: mov rbp,rsp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
0x4005a5: mov eax,[rip+0x200a4d] # 0x600ff8; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x4005a4: mov rax,[rip+0x200a4d] # 0x600ff8; test rax,rax; je 0x4005b5 <_init+21>; call 0x400640 <__gmon_start__@plt>; add rsp,0x8; ret
0x400709: push rbp; mov rbp,rsp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
0x400708: adc [rbp+0x48],edx; mov ebp,esp; call 0x400680 <deregister_tm_clones>; pop rbp; mov [rip+0x20098e],0x1 # 0x6010a8 <completed.7585>; repz ret
